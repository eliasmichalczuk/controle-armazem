/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.func;

import DAO.Connect;
import EDA.Dep;
import EDA.Funcionario;
import app.Armazem;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Elias
 */
public class CadFunc extends javax.swing.JFrame {
boolean ehCadastro = true;
    /**
     * Creates new form CadFunc
     * @param cadastrar
     */
    public CadFunc(boolean cadastrar) {
        ehCadastro = cadastrar;
        initComponents();
        carregardep();
       if(cadastrar){
            rotuloTitulo.setText("Cadastrar Funcionario");
            botaoAcao.setText("Cadastrar");
        }
        else{
            rotuloTitulo.setText("Alterar Funcionario");
            botaoAcao.setText("Consultar");
            alterarEdicaoCampos( false );
            campocpf.setEnabled( true );
            combobox.setSelectedIndex(0);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelnome = new javax.swing.JLabel();
        botaoAcao = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        campocpf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        camponome = new javax.swing.JTextField();
        rotuloTitulo = new javax.swing.JLabel();
        labelcodigo = new javax.swing.JLabel();
        campoend = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        campotel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        combobox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelnome.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        labelnome.setText("Nome:");

        botaoAcao.setBackground(new java.awt.Color(204, 255, 204));
        botaoAcao.setText("acao");
        botaoAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAcaoActionPerformed(evt);
            }
        });

        botaoCancelar.setBackground(new java.awt.Color(255, 153, 153));
        botaoCancelar.setText("Voltar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Armazem !N$4N0");

        rotuloTitulo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        rotuloTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rotuloTitulo.setText("Cadastro funcionario");

        labelcodigo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        labelcodigo.setText("CPF:");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        jLabel5.setText("Tel:");

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        jLabel7.setText("Endereço:");

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 10)); // NOI18N
        jLabel8.setText("Dep:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rotuloTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelcodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(campocpf, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelnome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(camponome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botaoCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoAcao))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 28, Short.MAX_VALUE)
                        .addComponent(campotel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoend, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rotuloTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelcodigo)
                    .addComponent(campocpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelnome)
                    .addComponent(camponome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAcao)
                    .addComponent(botaoCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAcaoActionPerformed
        if( ehCadastro ){
            tratarCadastro();
        }

        else{ //é alteração
            tratarAlteracao();
        }
    }//GEN-LAST:event_botaoAcaoActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        int acao = JOptionPane.showConfirmDialog(this, "Você tem certeza que deseja voltar?\n"
            + "Todos os dados digitados serão perdidos.", "Confirmação",
            JOptionPane.YES_NO_OPTION );

        if( acao == JOptionPane.NO_OPTION ) return;

        Armazem.showTelaInicial();
        this.dispose();
    }//GEN-LAST:event_botaoCancelarActionPerformed
    private void tratarAlteracao()
       {
           if( campocpf.isEnabled() ){
            long codigo;
            try{
                codigo = Long.parseLong( campocpf.getText() );
            } catch ( NumberFormatException ex ){
                showErroPreenchimento();
                return;
            }
            
            Funcionario f = Armazem.getBD().getFunc(codigo);
            if( f==null ){
                JOptionPane.showMessageDialog(this, "Nenhum funcionario foi encontrado com este código!", "Resultado", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                campocpf.setText( ""+f.cpf );
                camponome.setText( f.nome );
                campoend.setText(""+f.endereco );
                campotel.setText(""+f.telefone );
                carregardep();
                alterarEdicaoCampos( true );
                campocpf.setEnabled( false );
                botaoAcao.setText("Alterar");
            }
        }

        else{ // realizar alteração na tabela
            if( verificarErros() ){
                showErroPreenchimento();
                return;
            }
            long cpf,cod;
            String nome,cod1;
            try{
                cpf = Long.parseLong( campocpf.getText() );
                
                //Dep selected =(Dep)combobox.getSelectedItem();
                //cod = selected.cod;
                cod = combobox.getSelectedIndex();
            } catch ( NumberFormatException ex ){
                showErroPreenchimento();
                return;
            }
            Funcionario func = new Funcionario(cpf, cod, camponome.getText(), campoend.getText(),  campotel.getText());
            boolean resultado = Armazem.getBD().alterarFunc(func);
            if( resultado == false ){
                showErroBD();
                return;
            }
            int opcao = JOptionPane.showConfirmDialog(this, "Dados alterados com sucesso.\n"
                    + "Deseja alterar outro registro?", "Operação Realizada com Sucesso", JOptionPane.YES_NO_OPTION);
            if( opcao == JOptionPane.YES_OPTION ){
                limpaCampos();
                alterarEdicaoCampos( false );
                campocpf.setEnabled( true );
                botaoAcao.setText("Consultar");
            }
            else{
                Armazem.showTelaInicial();
                this.dispose();
            }
        }
       }
    private void tratarCadastro(){
        if( verificarErros() ){
                showErroPreenchimento();
                return;
            }
            long cpf,cod;
            String nome,cod1;
            try{
                cpf = Long.parseLong( campocpf.getText() );
                
                //Dep selected =(Dep)combobox.getSelectedItem();
                //cod = selected.cod;
                cod = combobox.getSelectedIndex() + 1;
            } catch ( NumberFormatException ex ){
                showErroPreenchimento();
                return;
            }
            
            Funcionario func = new Funcionario(cpf, cod, camponome.getText(), campoend.getText(),  campotel.getText());
            boolean resultado = Armazem.getBD().cadastrarFunc(func);
            if( resultado == false ){
                showErroBD();
                return;
            }
            int opcao = JOptionPane.showConfirmDialog(this, "Funcionario adicionado com sucesso.\n"
                    + "Deseja adicionar outro registro?", "Operação Realizada com Sucesso", JOptionPane.YES_NO_OPTION);
            if( opcao == JOptionPane.YES_OPTION ){
                limpaCampos();
            }
            else{
                Armazem.showTelaInicial();
                this.dispose();
            }
    }
    /**
     * @param args the command line arguments
     */
    private boolean verificarErros(){
        if( camponome.getText().length()<=5 && campotel.getText().length()<=3 && campocpf.getText().length()<11 && campocpf.getText().length()>11 && campoend.getText().length()<=5 ){
            showErroPreenchimento();
            return true;
        }
        return false;
    }
    
     private void showErroPreenchimento(){
        JOptionPane.showMessageDialog(this, "Verifique o preenchimento dos dados!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    private void showErroBD(){
        JOptionPane.showMessageDialog(this, "Ocorreu algum erro ao registrar dados no BD!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
        private void limpaCampos(){
        camponome.setText("");
        campotel.setText("");
        campocpf.setText("");
        campoend.setText("");
    }
        
    
    private void alterarEdicaoCampos(boolean opcao){
        camponome.setEnabled( opcao );
        campotel.setEnabled( opcao );
        campocpf.setEnabled( opcao );
        campoend.setEnabled( opcao );
        combobox.setEnabled( opcao );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAcao;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JTextField campocpf;
    private javax.swing.JTextField campoend;
    private javax.swing.JTextField camponome;
    private javax.swing.JTextField campotel;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel labelcodigo;
    private javax.swing.JLabel labelnome;
    private javax.swing.JLabel rotuloTitulo;
    // End of variables declaration//GEN-END:variables

    private void carregardep() {
       Connect bd = Armazem.getBD();
        ArrayList<Dep> deps = bd.getDeps();
        for( Dep d : deps ){
            Dep dep = new Dep(d.cod, d.salario, d.desc);
            combobox.addItem(d.desc);
        }
    }
}
